{"uid":"14409f804f3cf3fa","name":"test_edit","fullName":"tests.test_edit#test_edit","historyId":"65f16bf3ba35b152446354b19e0b1751","time":{"start":1717612672407,"stop":1717612683556,"duration":11149},"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message:","statusTrace":"logged_in_test = (<pages.home_page.HomePage object at 0x7f8ee10c65a0>, 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJkYW5ueTYyIiwiYXV0aCI6W3siYXV0aG...lCGlmJ#7', email='mendozakatie@example.net', firstName='John', lastName='Nguyen', roles=['ROLE_ADMIN', 'ROLE_CLIENT']))\n\n    def test_edit(logged_in_test: Tuple[HomePage, str, User]):\n        home_page, token, user = logged_in_test\n        newUser = get_random_user()\n>       home_page.click_edit_on(user).edit_user(newUser, HomePage).verify_user_displayed(\n            newUser\n        ).verify_user_not_displayed(user).get_alert().verify_alert_success(\n            \"Updating user successful\"\n        )\n\ntests/test_edit.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/home_page.py:38: in verify_user_displayed\n    self._find_row_with_user(user)\npages/home_page.py:52: in _find_row_with_user\n    users_list = self._get_users()\npages/home_page.py:59: in _get_users\n    self.wait.until(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"f1279533165409196ae3a461b4e30e41\")>\nmethod = <function HomePage._get_users.<locals>.<lambda> at 0x7f8ee0be5440>\nmessage = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n/opt/hostedtoolcache/Python/3.12.1/x64/lib/python3.12/site-packages/selenium/webdriver/support/wait.py:105: TimeoutException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1717612661920,"stop":1717612661938,"duration":18},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"chrome_browser","time":{"start":1717612671188,"stop":1717612671490,"duration":302},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"logged_in_test","time":{"start":1717612671490,"stop":1717612672407,"duration":917},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message:","statusTrace":"logged_in_test = (<pages.home_page.HomePage object at 0x7f8ee10c65a0>, 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJkYW5ueTYyIiwiYXV0aCI6W3siYXV0aG...lCGlmJ#7', email='mendozakatie@example.net', firstName='John', lastName='Nguyen', roles=['ROLE_ADMIN', 'ROLE_CLIENT']))\n\n    def test_edit(logged_in_test: Tuple[HomePage, str, User]):\n        home_page, token, user = logged_in_test\n        newUser = get_random_user()\n>       home_page.click_edit_on(user).edit_user(newUser, HomePage).verify_user_displayed(\n            newUser\n        ).verify_user_not_displayed(user).get_alert().verify_alert_success(\n            \"Updating user successful\"\n        )\n\ntests/test_edit.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/home_page.py:38: in verify_user_displayed\n    self._find_row_with_user(user)\npages/home_page.py:52: in _find_row_with_user\n    users_list = self._get_users()\npages/home_page.py:59: in _get_users\n    self.wait.until(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"f1279533165409196ae3a461b4e30e41\")>\nmethod = <function HomePage._get_users.<locals>.<lambda> at 0x7f8ee0be5440>\nmessage = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n/opt/hostedtoolcache/Python/3.12.1/x64/lib/python3.12/site-packages/selenium/webdriver/support/wait.py:105: TimeoutException","steps":[],"attachments":[{"uid":"a61434a618214755","name":"log","source":"a61434a618214755.txt","type":"text/plain","size":3738}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true},"afterStages":[{"name":"logged_in_test::0","time":{"start":1717612683600,"stop":1717612683615,"duration":15},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"chrome_browser::0","time":{"start":1717612683615,"stop":1717612683678,"duration":63},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_edit"},{"name":"host","value":"fv-az1776-909"},{"name":"thread","value":"3421-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_edit"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":1,"skipped":0,"passed":1,"unknown":0,"total":2},"items":[{"uid":"f1910c2373801270","reportUrl":"https://jim-stone.github.io/python-e2e-localstack-tests/1//#testresult/f1910c2373801270","status":"passed","time":{"start":1715715089088,"stop":1715715091901,"duration":2813}}]},"tags":[]},"source":"14409f804f3cf3fa.json","parameterValues":[]}